<<<<<<< HEAD
install.packages("Rcmdr")
n
Y
install.packages("Rcmdr")
load("~/Google Drive/Purdue University/Academics/Sem-2/IE590-19557/Lab 3/Soni_lab3_0128.RData")
q3.bermuda<-f[f$country=="Bermuda",]
load("~/Google Drive/Purdue University/Academics/Sem-2/IE590-19557/Lab 5/Soni_lab5_0216.RData")
load("~/Google Drive/Project_R/Project/EDA.RData")
lst.df <- ls()[1:18]
tables<- lapply(mget(lst.df),function(x)x[1:1827,])
list2env(tables,envir=.GlobalEnv)
rm(tables)
colnames(df)
load("~/Google Drive/Project_R/Project/EDA.RData")
?cor
install.packages("ISLR")
load("~/Google Drive/Purdue University/Academics/Sem-2/PredModel/Midterm/MT.RData")
library(rJava)
library(bartMachine)
library(rJava)
cat("\014")
library(rJava)
options("java.home")
library(rJava)
library(bartMachine)
cat("\014")
library(rJava)
options("java.home")
options("java.home")
library(rJava)
library(bartMachine)
options("java.home")
library(bartMachine)
?bartMachine
install.packages("bartMachine")
library(bartMachine)
library(rJava)
library(xlsx)
library(bartMachine)
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
library(bartMachine)
library(bartMachine)
?bartMachine
options("java.home")
save(list=ls(all=T),file='MT.RData')
install.packages("rJava",type='source')
library(bartMachine)
load("~/Google Drive/Purdue University/Academics/Sem-2/PredModel/Midterm/MT.RData")
lst.IP<-installed.packages()
cat("\014")
lst.IP[which(lst.IP['Package']=='rJava'),]
lst.IP
lst.IP<-data.frame(installed.packages())
lst.IP[which(lst.IP['Package']=='rJava'),]
?install.packages
installed.packages("rJava",type="source",destdir="/Users/sonin/Google Drive/Purdue University/Academics/Sem-2/PredModel/Midterm")
installed.packages("rJava",type="source")
install.packages("rJava",type="source")
install.packages("rJava", type = "source")
library(rJava)
install.packages("rJava",type="source")
install.packages('gdalUtils')
library(gdalUtils)
gdalinfo("MOD04_3K.A2014225.0615.061.2017314061523.hdf")
parent.frame
parent.frame(2)
dirname(sys.frame(1)$ofile)
getwd()
clear
cat('\014')
source("Analysis2.R", chdir = T)
dirname(rstudioapi::getActiveDocumentContext()$path)
dirname(parent.frame(2)$ofile)
?dirname
?parent
dirname(sys.frame(1)$ofile)
setwd()
rstudioapi::getSourceEditorContext()$path
dirname(rstudioapi::getSourceEditorContext()$path)
wd<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(wd)
load(wd + 'Analysis2.Rdata')
load(paste0(wd, '/Analysis2.Rdata'))
rm(wd)
dsfadsf
dirname(rstudioapi::getSourceEditorContext()$path)
completeness<-function(dat)
{
dat[dat==""]<-NA
dat[dat=="."]<-NA
a=nrow(dat)
b=length(dat)
c=sum(is.na(dat))/(a*b)
return(round(100*(1-c),digits=1))
}
crossValidate<-function(cvtype,folds,dataset,model,resp)
{
df<-dataset
if (cvtype=="kfold")
{
df$knum<-sample(1:folds,nrow(df),replace = TRUE)
rmse_kfold<-0
for (i in 1:folds)
{
df.test<-df[df$knum==i,]
df.train<-df[!df$knum==i,]
pred<-predict(model,df.test)
pred[is.na(pred)]<-mean(pred,na.rm = T)
rmse_kfold<-cbind(rmse_kfold,rmse(df.test[,resp],pred))
}
return (mean(rmse_kfold[,-1]))
}
else if (cvtype=="LOOCV"||cvtype=="loocv")
{
rmse_loocv<-0
for (i in 1:nrow(df))
{
df.test<-df[i,]
df.train<-df[-i,]
pred<-predict(model,df.test)
pred[is.na(pred)]<-mean(df.train[,resp])
rmse_loocv<-cbind(rmse_loocv,rmse(df.test[,resp],pred))
}
return(mean(rmse_loocv[,-1]))
}
}
getwd
getwd()
# header----
save(list=ls(all=T),file='Analysis2.RData')
completeness(df)
completeness<-function(dat)
{
dat[dat=="."]<-NA
a=nrow(dat)
b=length(dat)
c=sum(is.na(dat))/(a*b)
return(round(100*(1-c),digits=1))
}
# header----
save(list=ls(all=T),file='Analysis2.RData')
completeness(df)
completeness(temp)
completeness<-function(dat)
{
dat[dat=="."]<-NA
a=nrow(dat)
b=length(dat)
c=sum(is.na(dat))/(a*b)
return(round(100*(1-c),digits=2))
}
# header----
save(list=ls(all=T),file='Analysis2.RData')
rm(df1)
# header----
save(list=ls(all=T),file='Analysis2.RData')
?require
completeness('df')
completeness(df)
completeness<-function(dat)
{
dat=as.character(dat)
dat[dat=="."]<-NA
a=nrow(dat)
b=length(dat)
c=sum(is.na(dat))/(a*b)
return(round(100*(1-c),digits=2))
}
temp<-as.character(df)
temp<-data.frame(as.character(df))
View(temp)
temp<-lapply(df,character)
temp<-as.data.frame(sapply(df,as.character))
completeness<-function(dat)
{
dat<-as.data.frame(sapply(df,as.character))
dat[dat=="."]<-NA
a=nrow(dat)
b=length(dat)
c=sum(is.na(dat))/(a*b)
return(round(100*(1-c),digits=2))
}
completeness<-function(dat)
{
dat<-as.data.frame(sapply(dat,as.character))
dat[dat=="."]<-NA
a=nrow(dat)
b=length(dat)
c=sum(is.na(dat))/(a*b)
return(round(100*(1-c),digits=2))
}
# header----
save(list=ls(all=T),file='Analysis2.RData')
completeness(df)
completeness(df[,-1])
completeness(df[,-c(1,2)])
# header----
save(list=ls(all=T),file='Analysis2.RData')
View(factor.table)
rownames(factor.table)<-NULL
View(factor.table)
# header----
save(list=ls(all=T),file='Analysis2.RData')
git status
colnames(Df)
colnames(df)
getwd
getwd()
clearPushBack()
str(Df)
str(df)
temp<-df[complete.cases(df),]
View(temp)
library(rJava)
library(bartMachine)
View(df)
fart<-bartMachine(temp[,-c(1,9)],temp[,9])
fart<-bartMachine(df[,-c(1,9)],df[,9], use_missing_data = TRUE)
# BART----
options(java.parameters = '-Xmx12g')
fart<-bartMachine(df[,-c(1,9)],df[,9], use_missing_data = TRUE)
getwd()
# header----
=======
>>>>>>> 0cc9dd5d4929e48776e222d11b33b75e76e6e74a
save(list=ls(all=T),file='Analysis2.RData')
wd<-dirname(rstudioapi::getSourceEditorContext()$path)
setwd(wd)
load(paste0(wd, '/Analysis2.Rdata'))
